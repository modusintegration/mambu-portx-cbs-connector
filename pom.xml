<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>3.20.3</version>
    </parent>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <camel-version>3.20.3</camel-version>
        <portx-camel-lib.version>2.0.18</portx-camel-lib.version>
        <sentry.version>5.6.1</sentry.version>
        <atlassian.oai.validator.version>2.34.0</atlassian.oai.validator.version>
        <cucumber.version>7.12.1</cucumber.version>
        <hibernate-types.version>2.14.0</hibernate-types.version>
        <hibernate.version>5.4.33</hibernate.version>
        <javax-persistence.version>2.2</javax-persistence.version>
        <lombok.version>1.18.20</lombok.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>        
    </properties>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mambu-portx-cbs-connector</artifactId>
    <groupId>io.portx.cbs.connector</groupId>
    <version>1.0.86-SNAPSHOT</version>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${lombok-maven-plugin.version}</version>
                    <executions>
                      <execution>
                        <phase>generate-sources</phase>
                        <goals>
                          <goal>delombok</goal>
                        </goals>
                        <configuration>
                          <addOutputDirectory>false</addOutputDirectory>
                          <sourceDirectory>src/main/java</sourceDirectory>
                          <outputDirectory>${project.build.directory}/delombok</outputDirectory>
                        </configuration>
                      </execution>
                    </executions>
                  </plugin>                
                <plugin>
                    <groupId>org.apache.camel</groupId>
                    <artifactId>camel-restdsl-openapi-plugin</artifactId>
                    <version>${camel-version}</version>
                    <executions>
                        <execution>
                          <?m2e ignore?>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate-with-dto</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <swaggerCodegenMavenPluginVersion>3.0.19</swaggerCodegenMavenPluginVersion>
                        <specificationUri>${basedir}${file.separator}src${file.separator}spec${file.separator}swagger.yaml</specificationUri>
                        <modelPackage>io.portx.cbs.connector</modelPackage>
                        <packageName>io.portx.cbs.connector</packageName>
                        <outputDirectory>${project.build.directory}${file.separator}generated-sources${file.separator}openapi${file.separator}src${file.separator}main${file.separator}java</outputDirectory>
                        <restConfiguration>true</restConfiguration>
                        <configOptions>
                            <dateLibrary>java18</dateLibrary>
                        </configOptions>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.jknack</groupId>
                            <artifactId>handlebars</artifactId>
                            <version>4.3.0</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.7.5</version>
                    <configuration>
                        <layout>ZIP</layout>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <!-- For Lombok -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <!--For MapStruct -->
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <!-- For Mapstruct & Lombok working together-->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>                            
                            <!-- For JPA static metamodel generation -->
                            <path>
                                <groupId>org.hibernate</groupId>
                                <artifactId>hibernate-jpamodelgen</artifactId>
                                <version>${hibernate.version}</version>
                            </path>
                            <path>
                                <groupId>javax.persistence</groupId>
                                <artifactId>javax.persistence-api</artifactId>
                                <version>${javax-persistence.version}</version>
                                </path>
                        </annotationProcessorPaths>                        
                    </configuration>

                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.camel</groupId>
                    <artifactId>camel-maven-plugin</artifactId>
                    <version>${camel-version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <rerunFailingTestsCount>0</rerunFailingTestsCount>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- allows the route to be ran via 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-restdsl-openapi-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-gpg-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/spec</directory>
                <includes>
                    <include>swagger.yaml</include>
                </includes>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>debug</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.camel.springboot</groupId>
                    <artifactId>camel-debug-starter</artifactId>
                    <version>${camel-version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>    
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Camel BOM -->
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-servlet-starter</artifactId>
                <version>${camel-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-jetty-starter</artifactId>
                <version>${camel-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-rest-starter</artifactId>
                <version>${camel-version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${spring-boot-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.portx.camel</groupId>
                <artifactId>portx-camel-lib</artifactId>
                <version>${portx-camel-lib.version}</version>
            </dependency>

            <dependency>
                <groupId>org.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>3.9.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-sql</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>1.3.2</version>
        </dependency> -->
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>0.1.5</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>0.1.5</version>
        </dependency>

        <dependency>
            <groupId>com.atlassian.oai</groupId>
            <artifactId>swagger-request-validator-core</artifactId>
            <version>${atlassian.oai.validator.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>

        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <version>${camel-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>${spring-boot-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- fine grained dependencies when using engine-starter -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-engine-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-bean-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-direct-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-log-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>

        <!-- xml-io with fast xml route loader -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xml-io-dsl-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <!-- used to dump routes as XML -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xml-jaxb-dsl-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-datasonnet-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-groovy-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>

        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-spring-boot-starter</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-logback</artifactId>
            <version>${sentry.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>        
        <dependency>
            <groupId>io.portx.camel</groupId>
            <artifactId>portx-camel-lib</artifactId>
            <version>${portx-camel-lib.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-servlet-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-rest-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jcache-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>3.9.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-debug</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-opentelemetry-starter</artifactId>
            <version>${camel-version}</version>
        </dependency>
<!--        <dependency>
            <groupId>io.portx.validation</groupId>
            <artifactId>portx-api-schema-validator</artifactId>
            <version>0.0.6</version>
        </dependency>-->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <version>2.27.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${javax-persistence.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.5.6-Final</version>
        </dependency> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.2.0.Final</version>
        </dependency>
        <!-- to be able to use JSON hibernate types -->
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>${hibernate-types.version}</version>
        </dependency>         
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <!-- lombok dependencies should not end up on classpath -->
            <scope>provided</scope>
        </dependency>
      
          <!-- https://mapstruct.org/faq/#Can-I-use-MapStruct-together-with-Project-Lombok
            If you are using Lombok 1.18.16 or newer you also need to add lombok-mapstruct-binding in order to make Lombok and MapStruct work together. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <version>${lombok-mapstruct-binding.version}</version>
        </dependency>                         
    </dependencies>
    <repositories>
        <repository>
            <id>portx-repository-snapshots</id>
            <name>portx-repository-snapshots</name>
            <snapshots>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <url>https://portx.jfrog.io/portx/portx-snapshots</url>
        </repository>
        <repository>
            <id>portx-repository-releases</id>
            <name>portx-repository-releases</name>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://portx.jfrog.io/portx/portx-releases</url>
        </repository>
    </repositories>
    <scm>
        <connection>scm:git:https://github.com/modusintegration/${project.artifactId}.git</connection>
        <developerConnection>scm:git:https://github.com/modusintegration/${project.artifactId}.git</developerConnection>
        <url>https://github.com/modusintegration/${project.artifactId}.git</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>portx-repository-releases</id>
            <name>PortX Releases Repository</name>
            <url>https://portx.jfrog.io/portx/portx-releases</url>
        </repository>
        <snapshotRepository>
            <id>portx-repository-snapshots</id>
            <name>PortX Snapshots Repository</name>
            <url>https://portx.jfrog.io/portx/portx-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
			<outputName>Unit-Test-Report</outputName>
		</configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
