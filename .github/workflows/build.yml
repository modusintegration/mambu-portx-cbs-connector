name: Production build
on:
  push:
    branches:
      - main
jobs:
  package-gbp-deploy-dr-push:
    env:
      REGISTRY: 117317084632.dkr.ecr.us-west-2.amazonaws.com
      APP_NAME: mambu-portx-cbs-connector
    name: Build API package
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Maven Caching
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{"id":"github", "url": "https://portx.jfrog.io/portx/portx-releases","releases":{"enabled":true},"snapshots":{"enabled":true}},{"id":"portx-repository-snapshots", "url": "https://portx.jfrog.io/portx/portx-snapshots","releases":{"enabled":false},"snapshots":{"enabled":true}},{"id": "portx-repository-releases", "url": "https://portx.jfrog.io/portx/portx-releases","releases":{"enabled":true},"snapshots":{"enabled":false}}]'
          servers: |
            [{"id": "github", "username": "${username}", "password": "${password}"},{"id": "portx-repository-snapshots", "username": "deployer", "password": "${{ secrets.PORTX_SNAPSHOTS_PASSWORD }}"},{"id": "portx-repository-releases", "username": "deployer", "password": "${{ secrets.PORTX_RELEASES_PASSWORD }}"}]

      - name: Release
        run: |
          git config --global user.email "ci@modusbox.com"
          git config --global user.name "ci"
          mvn -B release:prepare release:perform -DignoreSnapshots=true -Dusername=$GITHUB_ACTOR -Dpassword=${{ secrets.PAT_TOKEN }} -DscmCommentPrefix="[skip ci]"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Log in to ECR
        run: aws ecr get-login-password | docker login --password-stdin --username AWS $REGISTRY

      - name: Build and Push
        run: |
          docker build -t $REGISTRY/$APP_NAME -f Dockerfile .
          docker tag $REGISTRY/$APP_NAME $REGISTRY/$APP_NAME:prod-${{ github.sha }}-latest
          docker push $REGISTRY/$APP_NAME:prod-${{ github.sha }}-latest
