/*
 * Bank Account Management
 * Bank Account Management
 *
 * OpenAPI spec version: 1.0.0
 * Contact: betiana.darderes@modusbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.portx.cbs.connector;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.portx.cbs.connector.BankAttributeBankResponseJsonV400;
import io.portx.cbs.connector.BankRoutingJsonV121;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * BankJson400
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-08T17:43:50.640456-05:00[America/Mexico_City]")
public class BankJson400 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("short_name")
  private String shortName = null;

  @SerializedName("full_name")
  private String fullName = null;

  @SerializedName("logo")
  private String logo = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("bank_routings")
  private List<BankRoutingJsonV121> bankRoutings = new ArrayList<BankRoutingJsonV121>();

  @SerializedName("attributes")
  private List<BankAttributeBankResponseJsonV400> attributes = null;

  public BankJson400 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "gh.29.uk", required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BankJson400 shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @Schema(example = "short_name", required = true, description = "")
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public BankJson400 fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @Schema(example = "full_name", required = true, description = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public BankJson400 logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @Schema(example = "logo", required = true, description = "")
  public String getLogo() {
    return logo;
  }

  public void setLogo(String logo) {
    this.logo = logo;
  }

  public BankJson400 website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @Schema(example = "www.openbankproject.com", required = true, description = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public BankJson400 bankRoutings(List<BankRoutingJsonV121> bankRoutings) {
    this.bankRoutings = bankRoutings;
    return this;
  }

  public BankJson400 addBankRoutingsItem(BankRoutingJsonV121 bankRoutingsItem) {
    this.bankRoutings.add(bankRoutingsItem);
    return this;
  }

   /**
   * Get bankRoutings
   * @return bankRoutings
  **/
  @Schema(required = true, description = "")
  public List<BankRoutingJsonV121> getBankRoutings() {
    return bankRoutings;
  }

  public void setBankRoutings(List<BankRoutingJsonV121> bankRoutings) {
    this.bankRoutings = bankRoutings;
  }

  public BankJson400 attributes(List<BankAttributeBankResponseJsonV400> attributes) {
    this.attributes = attributes;
    return this;
  }

  public BankJson400 addAttributesItem(BankAttributeBankResponseJsonV400 attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<BankAttributeBankResponseJsonV400>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public List<BankAttributeBankResponseJsonV400> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<BankAttributeBankResponseJsonV400> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankJson400 bankJson400 = (BankJson400) o;
    return Objects.equals(this.id, bankJson400.id) &&
        Objects.equals(this.shortName, bankJson400.shortName) &&
        Objects.equals(this.fullName, bankJson400.fullName) &&
        Objects.equals(this.logo, bankJson400.logo) &&
        Objects.equals(this.website, bankJson400.website) &&
        Objects.equals(this.bankRoutings, bankJson400.bankRoutings) &&
        Objects.equals(this.attributes, bankJson400.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, shortName, fullName, logo, website, bankRoutings, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankJson400 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    bankRoutings: ").append(toIndentedString(bankRoutings)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
