<?xml version="1.0" encoding="UTF-8"?>
<routes xmlns="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <route id="mockRoute">
        <from uri="direct:mockRouteURI"/>

        <log message="MOCK: Mocking http route ${header.CamelInterceptedEndpoint} ${header.CamelHttpPath}"  loggingLevel="DEBUG"/>

        <choice>
            <when>
                <simple>${header.CamelInterceptedEndpoint} regex '^.*/api/branches.*' &amp;&amp; ${header.CamelHttpMethod} == 'GET'</simple>
                <setHeader name="CamelHttpResponseCode">
                    <constant>200</constant>
                </setHeader>
                <setBody>
                    <simple>resource:classpath:test-data/json/mambuAPI/getBranchesResponse.json</simple>
                </setBody>
                <log message="MOCK: ${header.CamelHttpMethod} ${header.CamelInterceptedEndpoint} ${header.CamelHttpPath} ${header.CamelHttpResponseCode}"  loggingLevel="DEBUG"/>
            </when>
            <when>
                <simple>${header.CamelInterceptedEndpoint} regex '^.*/api/branches' &amp;&amp; ${header.CamelHttpMethod} == 'POST'</simple>
                <setProperty name="TEST_createBranchRequest">
                    <simple>${body}</simple>
                </setProperty>
                <setBody>
                    <simple>resource:classpath:test-data/json/mambuAPI/createBranchResponse.json</simple>
                </setBody>
                <setHeader name="CamelHttpResponseCode">
                    <constant>200</constant>
                </setHeader>
                <log message="MOCK: ${header.CamelHttpMethod} ${header.CamelInterceptedEndpoint} ${header.CamelHttpPath} ${header.CamelHttpResponseCode}"  loggingLevel="DEBUG"/>
            </when>
            <when>
                <simple>${header.CamelInterceptedEndpoint} regex '^.*/api/branches.*' &amp;&amp; ${header.CamelHttpMethod} == 'PUT'</simple>
                <setProperty name="TEST_updateBranchRequest">
                    <simple>${body}</simple>
                </setProperty>
                <setBody>
                    <simple>resource:classpath:test-data/json/mambuAPI/updateBranchRequest.json</simple>
                </setBody>
                <setHeader name="CamelHttpResponseCode">
                    <constant>200</constant>
                </setHeader>
                <log message="MOCK: ${header.CamelHttpMethod} ${header.CamelInterceptedEndpoint} ${header.CamelHttpPath} ${header.CamelHttpResponseCode}"  loggingLevel="DEBUG"/>
            </when>
            <when>
                <simple>${header.CamelHttpPath} == '/api/clients&#x3A;search' &amp;&amp;
                    ${header.CamelHttpMethod} == 'POST' &amp;&amp;
                    ${header.firstName.eq} == 'Michael' &amp;&amp;
                    ${header.lastName.eq} == 'Jordan'
                </simple>
                <setHeader name="CamelHttpResponseCode">
                    <constant>200</constant>
                </setHeader>
                <setBody>
                    <simple>resource:classpath:test-data/json/mambuAPI/findPersonByFirstNameAndLastNameMambuResponse.json</simple>
                </setBody>
                <log message="MOCK: ${header.CamelInterceptedEndpoint} ${header.CamelHttpResponseCode} ${body}"  loggingLevel="DEBUG"/>
            </when>
            <when>
                <simple>${header.CamelHttpPath} == '/api/clients&#x3A;search' &amp;&amp;
                    ${header.CamelHttpMethod} == 'POST' &amp;&amp;
                    ${header.townName.inc} == 'Chicago' &amp;&amp;
                    ${header.tin.eq} == '111-22-3333'
                </simple>
                <setHeader name="CamelHttpResponseCode">
                    <constant>200</constant>
                </setHeader>
                <setBody>
                    <simple>resource:classpath:test-data/json/mambuAPI/findPersonByTownNameAndTinMambuResponse.json</simple>
                </setBody>
                <log message="MOCK: ${header.CamelInterceptedEndpoint} ${header.CamelHttpResponseCode} ${body}"  loggingLevel="DEBUG"/>
            </when>
            <!-- <when>
                <simple>${header.CamelInterceptedEndpoint} regex '^.*sql:select count(*) as cnt from person where last_name.*'</simple>
                <setBody>
                    <simple>10</simple>
                </setBody>
                <log message="MOCK: ${header.CamelHttpMethod} ${header.CamelInterceptedEndpoint} ${header.CamelHttpPath} ${header.CamelHttpResponseCode}"  loggingLevel="DEBUG"/>
            </when> -->
            <otherwise>
                <log message="MOCK: No match for ${header.CamelHttpMethod} ${header.CamelInterceptedEndpoint} - CamelHttpPath is ${header.CamelHttpPath}" loggingLevel="DEBUG"/>
            </otherwise>
        </choice>
    </route>
</routes>