/** DataSonnet
version=2.0
output application/json
input payload application/json
*/
local selector(obj,key,dValue = null) = ds.or(ds.select(obj,key), dValue);
local addresses = selector(payload, "addresses");
local first = selector(payload, "firstName");
local middle = selector(payload, "middleName");
local last = selector(payload, "lastName");
local fullname = (if first!=null then first else "") +
                 (if first!=null && middle!=null then " " else "") +
                 (if middle!=null then middle else "") +
                 (if (first!=null || middle!=null) && last!=null then " " else "") +
                 if last!=null then last;
local shortName = (if first!=null then first else "") +
                  (if first!=null && last!=null then " " else "") +
                  if last!=null then last;
local documents = if selector(payload, "idDocuments") != null then (ds.filter(selector(payload, "idDocuments"), function(value, index) value.documentType != "SocialSecurityNumber"));
local SSN = if selector(payload, "idDocuments") != null then (ds.filter(selector(payload, "idDocuments"), function(value, index) value.documentType == "SocialSecurityNumber")) else [];

local idDocuments = selector(payload, "idDocuments");
local postalAddresses =
  if (addresses != null && std.length(addresses) > 0) then
    [
      {
        postCode: selector(address, "postcode"),
        townName: selector(address, "city"),
        country: selector(address, "country"),
        addressLine: [
          selector(address, "line1"),
          selector(address, "line2"),
        ]
      } for address in addresses
    ]
  else
    [];

local mambuIdentifier = {
  number: selector(payload, "id"),
  schemeName: "clientId",
  issuer: "Mambu"
};
local otherDocuments =
  if (documents != null && std.length(documents) > 0) then
  [
    {
      number: selector(idDocument, "documentId"),
      schemeName: selector(idDocument, "documentType"),
    } for idDocument in documents
  ]
  else
  [];
local identifiers = [mambuIdentifier] + otherDocuments;
local taxInformation = if (SSN != null && std.length(SSN) > 0) then{
    tIN: selector(SSN[0], "documentId"),
    taxIdType: selector(SSN[0], "documentType")
};
std.prune({
  "personId": selector(payload, "encodedKey"),
  "identifiers": identifiers,
  "name": fullname,
  "shortName": shortName,
  "relatedParties": [
    {
      "partyId": selector(payload, "encodedKey"),
      "partyType": "Person",
      "partyRelationType": "Owner"
    }
  ],
  "postalAddresses": postalAddresses,
  "status": selector(payload, "state"),
  "placeAndDateOfBirth": {
    "birthDate": selector(payload, "birthDate"),
  },
  "contact": {
    "mobileNumber": selector(payload, "mobilePhone"),
    "emailAddress": selector(payload, "emailAddress"),
  },
  "structuredName": {
    "firstName": selector(payload, "firstName"),
    "middleName": selector(payload, "middleName"),
    "lastName": selector(payload, "lastName"),
  },
  "gender" : selector(payload, "gender"),
  "taxInformation": taxInformation,
  "audit" : {
    "status": selector(payload, "state"),
    "creationDate": selector(payload, "creationDate"),
    "lastModificationDate": selector(payload, "lastModifiedDate"),
  }
})

